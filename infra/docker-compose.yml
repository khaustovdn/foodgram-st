# infra/docker-compose.yml

# =========================================================
# Named Volumes for Persistent Data Storage
# =========================================================
volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume:

# =========================================================
# Service Definitions
# =========================================================
services:
  # PostgreSQL Database Service
  db:
    image: postgres:17.5
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Django Application Service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      STATIC_URL: /django_static/
      DJANGO_SETTINGS_MODULE: foodgram.settings
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
    depends_on:
      - db
    volumes:
      - static_volume:${STATIC_ROOT}
      - media_volume:${MEDIA_ROOT}

  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - type: bind
        source: ../frontend/build
        target: /usr/share/nginx/html

  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:1.25
    env_file: .env
    ports:
      - "8000:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:${STATIC_ROOT}
      - media_volume:${MEDIA_ROOT}
      - type: bind
        source: ../frontend/build
        target: /usr/share/nginx/html
        read_only: true
      - type: bind
        source: ../docs
        target: /usr/share/nginx/html/api/docs
        read_only: true
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf